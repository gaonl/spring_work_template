位置信息【方法的执行前，执行后，环绕，异常】
1.连接点  JoinPoint
	程序执行的某个点，比如【某个类的某个方法，构造方法，字段赋值等等】+【位置信息】
	这里有两个信息，一个是细到程序的【某个类的某个方法，构造方法，字段赋值等等】，一个是方法的执行【位置信息】

2.切点  PointCut
	连接点的集合，只是没有方法的【位置信息】，也就是说代表了【某些类的某些方法、某些构造方法，某些字段的赋值点的集合】

3.增强  Advice
    包含需要织入的【代码】和【位置信息】，即有前置增强，后置增强，环绕增强，异常增强

4.切面 Aspect
    切点和增强联合起来，就能在一个连接点集合中织入要执行的代码，即切面编程

5.Advisor(仅仅包含Advice)
	其实这就是一个切面，只是这个切面包含了所有类和所有方法
6.PointCutAdvisor
	一个切面，包含了PointCut所描述的类和方法 + Advice增强，即连接点+要织入的代码


7.【因为spring的实现是通过动态代理或者cglib实现的，调用同类方法，备调用的方法是直接调用的，没有通过代理的，所以被调用的同类方法是没有代理拦截效果的】
	【如果需要，可参考spring4.x企业级应用开发一书中7.5.4节的解决方案，或者使用AspectJ静态编译去实现】